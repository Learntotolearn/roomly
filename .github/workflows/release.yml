name: Release

# 需要配置的变量
# DOOTASK_USERNAME
# DOOTASK_PASSWORD
# DOCKER_USERNAME
# DOCKER_PASSWORD

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ github.repository }}
          tags: |
            type=ref,event=tag
            type=raw,value=latest,enable={{is_default_branch}}
            
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Create dootask-plugin tar.gz package
        run: |
          cd dootask-plugin
          tar -czf ../dootask-plugin.tar.gz .
          cd ..
          echo "Package created: dootask-plugin.tar.gz"
          ls -la dootask-plugin.tar.gz
          
      - name: Login to dootask appstore
        id: login
        run: |
          response=$(curl -s 'https://appstore.dootask.com/api/v1/developer/login' \
            -H 'Content-Type: application/json' \
            --data-raw '{"username":"${{ secrets.DOOTASK_USERNAME }}","password":"${{ secrets.DOOTASK_PASSWORD }}"}')
          
          echo "Login response: $response"
          
          token=$(echo "$response" | jq -r '.data.token')
          code=$(echo "$response" | jq -r '.code')
          
          if [ "$code" != "200" ]; then
            echo "Login failed with code: $code"
            exit 1
          fi
          
          echo "token=$token" >> $GITHUB_OUTPUT
          echo "Login successful"
          
      - name: Upload plugin to dootask appstore
        id: upload
        run: |
          response=$(curl -s 'https://appstore.dootask.com/api/v1/developer/app/upload' \
            --header 'Token: ${{ steps.login.outputs.token }}' \
            --form 'file=@"dootask-plugin.tar.gz"' \
            --form 'appid="roomly"')
          
          echo "Upload response: $response"
          
          hash=$(echo "$response" | jq -r '.data.hash')
          code=$(echo "$response" | jq -r '.code')
          
          if [ "$code" != "200" ]; then
            echo "Upload failed with code: $code"
            exit 1
          fi
          
          echo "hash=$hash" >> $GITHUB_OUTPUT
          echo "Upload successful, hash: $hash"
          
      - name: Publish to dootask appstore
        run: |
          response=$(curl -s 'https://appstore.dootask.com/api/v1/developer/app/publish' \
            -H 'Content-Type: application/json' \
            -H 'Token: ${{ steps.login.outputs.token }}' \
            --data-raw '{"hash":"${{ steps.upload.outputs.hash }}","is_public":true}')
          
          echo "Publish response: $response"
          
          code=$(echo "$response" | jq -r '.code')
          
          if [ "$code" != "200" ]; then
            echo "Publish failed with code: $code"
            exit 1
          fi
          
          echo "✅ Successfully published to dootask appstore!"